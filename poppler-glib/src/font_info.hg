/* Copyright (c) 2010  Glenn Rice <glennricster@gmail.com>
 *
 * This file is part of poppler-glibmm.
 *
 * poppler-glibmm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * poppler-glibmm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(poppler-glibmm,poppler-glib)
_PINCLUDE(glibmm/private/object_p.h)
#include <poppler-glibmm/fonts_iter.h>
_CC_INCLUDE(poppler.h)

namespace Poppler
{

/** A Poppler::FontInfo is used to scan for the fonts contained in a document
 * 
 * Here is a simple example of code to scan fonts in a document
 * 
 * @code
 * Glib::RefPtr<Poppler::FontInfo> font_info = document->get_font_info();
 * Poppler::FontsIter fonts_iter;
 * while (font_info->scan(20, fonts_iter))
 * {
 *     if (!fonts_iter) continue; // No fonts found in these 20 pages
 *     do
 *     {
 *         // Do something with font iter
 *         std::cout << "Font Name: " << fonts_iter.get_name() << std::endl;
 *     } while (fonst_iter.next());
 * }
 * @endcode
 */
class FontInfo : public Glib::Object
{
  _CLASS_GOBJECT(FontInfo, PopplerFontInfo, POPPLER_FONT_INFO, Glib::Object, GObject)

  protected:
    _CTOR_DEFAULT

  public:
    /** Scans the document associated with @a FontInfo for fonts. At most
     *  @a n_pages will be scanned starting from the current iterator. @a iter will
     * point to the first font scanned.
     * @param n_pages Number of pages to scan.
     * @param iter Return location for a Poppler::FontsIter.
     * @return <tt>true</tt>, if there are more fonts left to scan.
     */
    bool scan(int n_pages, FontsIter& iter) const;

    _IGNORE(poppler_font_info_free, poppler_font_info_scan)
};

} // namespace Poppler
